rep(c(0,1,2),each=10)
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
c(44,NA,5,NA)
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
q()
library(swirl)
swirl()
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
c()
c(3,5,7)
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
c(11,2,NA)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix()
?matrix
matrix(data = NA, nrow = 1, ncol = 1, byrow = FALSE,
dimnames = NULL)
my_matrix2<-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-vect[c("Bill","Gina","Kelly","Sean")]
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data)<-cnames
my_data
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!=7
5!==7
!5==!7
!5==7
FALSE&FALSE
TRUE&c(TRUE,FALSE,FALSE)
TRUE&&c(TRUE,FALSE,FALSE)
TRUE|c(TRUE,FALSE,FALSE)
TRUE||c(TRUE,FALSE,FALSE)
5>8||6!=8&&4>3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints<-sample(10)
ints
ints>5
which(ints>5)
which('ints>7')
ints>7
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
submit()
boring_function('My first function!')
boring_function
submit()
submit()
submit()
submit()
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(standard deviation, c(1.4,3.6,7.9,8.8))
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x+2},6)
evaluate(function(x){x[1])
evaluate(function(x){x[1]})
evaluate(function(x){x[1]},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming","is","fun!")
submit()
submit()
submit()
submit()
telegram("Jesus","Christ","Superstar")
submit()
submit()
submit()
submit()
mad_libs(bathroom, evil, bread)
mad_libs("bathroom", "evil", "bread")
submit()
"I" %p% "love" %p% "R!"
data(cars)
cars
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed, y=cars$dist)
plot(x=cars$dist,y=cars$speed)
?plot
plot(x=cars$speed, y=cars$dist, xlab = Speed)
plot(x=cars$speed, y=cars$dist)
plot(x=cars$speed, y=cars$dist, xlab = "Speed")
plot(x=cars$speed, y=cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x=cars$speed, y=cars$dist, ylab = "Stopping Distance")
plot(x=cars$speed, y=cars$dist, ylab = "Stopping Distance", xlab = "Speed")
plot(cars, main = "My Plot")
?plot
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10,15)
plot
plot(cars, xlim = c(10,15))
plot(cars, pch = 2)
data(mtcars)
?boxplot
boxplot(formula = mpg~cyl, data = mtcars)
hist(mtcars$mpg)
trueMean1 <- 5
trueSD1 <- 5
population1 <- rnorm(1e6, trueMean1, trueSD1)
trueMean2 <- 4
trueSD2 <- 5
population2 <- rnorm(1e6, trueMean2, trueSD2)
Size <- 50
Sample1 <- sample(population1, Size)
Sample2 <- sample(population2, Size)
Sample1
boxplot(Sample1, Sample2)
Sample2
?rnorm
source("http://jonsmitchell.com/code/simFxn04.R")
MatGrandma <- makeFounder("grandma_mom")
View(makeFounder)
MatGrandma
nrow(MatGrandma)
ncol(MatGrandma)
colnames(MatGrandma)
MatGrandpa <- makeFounder("grandpa_mom")
head(MatGrandpa)
PatGrandma <- makeFounder("grandma_da")
PatGrandpa <- makeFounder("grandpa_da")
head(PatGrandma)
Alan <- makeBaby(PatGrandma, PatGrandpa)
head(Alan)
nrow(Alan)
Brenda <- makeBaby(MatGrandma, MatGrandpa)
head(Brenda)
Focus <- makeBaby (Brenda, Alan)
head(Focus)
Focus
head(Focus)
nrows(Focus)
nrow(Focus)
ToMom <- length(grep("mom", Focus))/ length(Focus)
ToMomMom <- length(grep("grandma_mom", Focus))/ length(Focus)
ToMomDad <- length(grep("grandpa_mom", Focus))/ length(Focus)
ToMomMom
ToMomDad
head(Focus)
ToDadMom <- length(grep("grandma_da", Focus))/ length(Focus)
ToDadDad <- length(grep("grandpa_da", Focus))/ length(Focus)
ToDadMom
ToDadDad
Sibling_01 <- makeBaby(Brenda, Alan)
ToSib <- length(intersect(Focus, Sibling_01))/length(Focus)
ManySiblings <- replicate(1e3, length(intersect(Focus, makeBaby(Brenda, Alan)))/ length(Focus))
ManySiblings
quantile(ManySiblings)
mean(ManySiblings)
plot(density(ManySiblings), main="", xlab="proportion shared genes")
MatGrandma2 <- makeFounder("grandma_mom2", len = 1e5)
MatGrandpa2 <- makeFounder("grandpa_mom2", len = 1e5)
PatGrandma2 <- makeFounder("grandma_da2", len = 1e5)
PatGrandpa2 <- makeFounder("grandpa_da2", len = 1e5)
Alan2 <- makeBaby(PatGrandma2, PatGrandpa2)
Brenda2 <- makeBaby(MatGrandma2, MatGrandpa2)
Focus2 <- makeBaby (Brenda2, Alan2)
nrow(Focus)
nrow(MatGrandma2)
nrow(Alan2)
nrow(Focus)
nrow(Focus2)
ToMom2 <- length(grep("mom", Focus2))/ length(Focus2)
ToMomMom2 <- length(grep("grandma_mom2", Focus2))/ length(Focus2)
ToMomDad2 <- length(grep("grandpa_mom2", Focus2))/ length(Focus2)
ToDadMom2 <- length(grep("grandma_da2", Focus2))/ length(Focus2)
ToDadDad2 <- length(grep("grandpa_da2", Focus2))/ length(Focus2)
ToMom2
ToMomMom2
ToMomDad2
ToDadMom2
ToDadDad2
Sibling_02 <- makeBaby(Brenda2, Alan2)
ToSib2 <- length(intersect(Focus2, Sibling_02))/length(Focus2)
ManySiblings2 <- replicate(1e3, length(intersect(Focus2, makeBaby(Brenda2, Alan2)))/ length(Focus2))
quantile(ManySiblings2)
mean(ManySiblings2)
plot(density(ManySiblings2), main="", xlab="proportion shared genes")
ToSib2
ToSib2
Sibling_02 <- makeBaby(Brenda2, Alan2)
ToSib2 <- length(intersect(Focus2, Sibling_02))/length(Focus2)
))))
Sibling_02 <- makeBaby(Brenda2, Alan2)
ToSib2 <- length(intersect(Focus2, Sibling_02))/length(Focus2)
ToSib2
ManySiblings2 <- replicate(1e3, length(intersect(Focus2, makeBaby(Brenda2, Alan2)))/ length(Focus2))
quantile(ManySiblings2)
mean(ManySiblings2)
plot(density(ManySiblings2), main="", xlab="proportion shared genes")
?density
HWE <- function(p) {
aa <- p^2
ab <- 2 * p * (1 - p)
bb <- (1 - p)^2
return(c(aa=aa, ab=ab, bb=bb))
}
HWE(0.5)
plot(1, 1, type="n", xlim=c(0,1), ylim=c(0,1), xlab="freq. allele a", ylab="geno. freq")
p <- seq(from = 0, to = 1, by = 0.01)
GenoFreq <- t(sapply(p, HWE))
lines(p, GenoFreq[,"aa"], lwd=2, col="red")
GenoFreq
lines(p, GenoFreq[,"ab"], lwd=2, col="purple")
lines(p, GenoFreq[,"bb"], lwd=2, col="blue")
legend("top", legend=c("aa","ab","bb"), col=c("red","purple","blue"), lty=1, lwd=2, bty="n")
Pop <- simPop(500)
head(Pop)
points(Pop[,"freqa"], Pop[,"Genotypes.aa"]/500, pch=21, bg="red")
Pop <- simPop(50)
points(Pop[,"freqa"], Pop[,"Genotypes.aa"]/50, pch=22, bg="red")
head(Pop)
library(learnPopGen)
install.packages(learnPopGen)
install.packages("learnPopGen")
library(learnPopGen)
x <- genetic.drift(Ne=200, nrep=5, pause=0.01)
y <- genetic.drift(Ne=20, nrep=5, pause=0.01)
z <- genetic.drift(Ne=2000, nrep=5, pause=0.01)
PopSizes <- 5:50
Samples <- rep(PopSizes, 5)
head(Samples)
tExt <- sapply(Samples, function(x), nrow(simPop(x, 500)))
tExt <- sapply(Samples, function(x) nrow(simPop(x, 500)))
tExt
Line <- lm(tExt ~ Samples)
Line
summary(Line)
Line$coef
plot(Samples, tExt)
abline(Line)
Line2 <- lm(tExt ~ Samples + 0)
abline(Line2)
plot(Samples, tExt)
abline(Line2)
summary(Line2)
Line2$coefficients
Line2$coef
abline(Line2)
plot(Samples, tExt)
abline(Line)
plot(Samples, tExt)
abline(Line2)
Line2 <- lm(tExt ~ Samples + 0)
plot(Samples, tExt)
abline(Line)
plot(Samples, tExt)
abline(Line2)
install.packages("robustbase")
library(robustbase)
Line3 <- lmrob(tExt ~ Samples)
plot(Samples, tExt)
abline(Line3)
summary(Line3)
summary(Line)
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] == i)]
addHist(Y = counter, Dat = Data, Color = backgroundCol[counter])
counter <- counter + 1
}
abline(v = 11.70, lty = 2, lwd = 2, col = 'black')
Simulation <- simDraws(10000)
addHist(Y = 7, Dat = Simulation, Color = "lightgray")
mtext(side = 2, at = 7, line = 0, "simulated")
length(which(Simulation > 11.70)) / length(Simulation)
Fit <- c(1, 1, 1, 1, 1, 1)
names(Fit) <- 1:6
Simulation2 <- simDraws(1e4, w = Fit)
addHist(Y = 8, Dat = Simulation2, Color = rgb(0, 0, 0, 0.25))
Fit <- c(0.1, 1, 1, 1, 1, 1)
names(Fit) <- 1:6
Simulation3 <- simDraws(1e4, w = Fit)
addHist(Y = 8, Dat = Simulation3, Color = rgb(0, 0, 0, 0.25))
Fit <- c(0.5, 0.6, 0.7, 1, 1, 1)
names(Fit) <- 1:6
Simulation4 <- simDraws(1e4, w = Fit)
addHist(Y = 8, Dat = Simulation4, Color = rgb(0, 0, 0, 0.25))
Fit <- c(0.1, 0.2, 0.3, 0.4, 0.5, 1)
names(Fit) <- 1:6
Simulation5 <- simDraws(1e4, w = Fit)
addHist(Y = 8, Dat = Simulation5, Color = rgb(0, 0, 0, 0.25))
Fit <- c(0.1, 0.1, 0.1, 0.1, 0.1, 1)
names(Fit) <- 1:6
Simulation6 <- simDraws(1e4, w = Fit)
addHist(Y = 8, Dat = Simulation6, Color = rgb(0, 0, 0, 0.25))
mtext(side = 2, at = 8, line = 0, "sel. sim.")
setwd("C:\\Users\\Abbey\\Desktop\\Evolution\\Tasks\\Task_05")
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors = F)
results[1:20,]
counts <- results[,c("yellow", "red", "green", "blue", "black", "tan")]
counts[1:20,]
backgrounds <- c("White", "Red", "Yellow", "Green", "Blue", "Black")
backgroundCol <- c("white", "#d53e4f", "#fee08b", "#abdda4", "#3288bd", "black")
calcChi(counts[1,])
Chisqs <- apply(counts, 1, calcChi)
plotChis(counts)
Avg <- mean(Chisqs)
backgroundAvgs <- tapply(Chisqs, results[,3], mean)
propSig <- length(which(Chisqs > 11.70)) / length(Chisqs)
percSig <- round(100 * propSig)
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis = 1)
hist(Chisqs, main = "", xlab = "chi-squared values", ylab = "frequency")
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis = 1)
plot(1, 1, xlim = c(0, 400), ylim = c(1, 8.5), xlab = "", ylab = "", type = "n", yaxt = "n")
axis(2, at = 1:length(backgrounds), labels = backgrounds)
mtext(side = 1, expression(chi^2), cex = 1.75, line = 2.5)
counter <- 1
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] == i)]
addHist(Y = counter, Dat = Data, Color = backgroundCol[counter])
counter <- counter + 1
}
abline(v = 11.70, lty = 2, lwd = 2, col = 'black')
Simulation <- simDraws(10000)
addHist(Y = 7, Dat = Simulation, Color = "lightgray")
mtext(side = 2, at = 7, line = 0, "simulated")
length(which(Simulation > 11.70)) / length(Simulation)
Fit <- c(1, 1, 1, 1, 1, 1)
names(Fit) <- 1:6
Simulation2 <- simDraws(1e4, w = Fit)
addHist(Y = 8, Dat = Simulation2, Color = rgb(0, 0, 0, 0.25))
Fit <- c(0.1, 1, 1, 1, 1, 1)
names(Fit) <- 1:6
Simulation3 <- simDraws(1e4, w = Fit)
addHist(Y = 8, Dat = Simulation3, Color = rgb(0, 0, 0, 0.25))
Fit <- c(0.5, 0.6, 0.7, 1, 1, 1)
names(Fit) <- 1:6
Simulation4 <- simDraws(1e4, w = Fit)
addHist(Y = 8, Dat = Simulation4, Color = rgb(0, 0, 0, 0.25))
Fit <- c(0.1, 0.2, 0.3, 0.4, 0.5, 1)
names(Fit) <- 1:6
Simulation5 <- simDraws(1e4, w = Fit)
addHist(Y = 8, Dat = Simulation5, Color = rgb(0, 0, 0, 0.25))
Fit <- c(0.1, 0.1, 0.1, 0.1, 0.1, 1)
names(Fit) <- 1:6
Simulation6 <- simDraws(1e4, w = Fit)
addHist(Y = 8, Dat = Simulation6, Color = rgb(0, 0, 0, 0.25))
mtext(side = 2, at = 8, line = 0, "sel. sim.")
source("http://jonsmitchell.com/code/fxn05.R")
calcChi(counts[1,])
Chisqs <- apply(counts, 1, calcChi)
plotChis(counts)
Avg <- mean(Chisqs)
backgroundAvgs <- tapply(Chisqs, results[,3], mean)
propSig <- length(which(Chisqs > 11.70)) / length(Chisqs)
percSig <- round(100 * propSig)
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis = 1)
hist(Chisqs, main = "", xlab = "chi-squared values", ylab = "frequency")
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis = 1)
plot(1, 1, xlim = c(0, 400), ylim = c(1, 8.5), xlab = "", ylab = "", type = "n", yaxt = "n")
axis(2, at = 1:length(backgrounds), labels = backgrounds)
mtext(side = 1, expression(chi^2), cex = 1.75, line = 2.5)
counter <- 1
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] == i)]
addHist(Y = counter, Dat = Data, Color = backgroundCol[counter])
counter <- counter + 1
}
abline(v = 11.70, lty = 2, lwd = 2, col = 'black')
Simulation <- simDraws(10000)
addHist(Y = 7, Dat = Simulation, Color = "lightgray")
mtext(side = 2, at = 7, line = 0, "simulated")
length(which(Simulation > 11.70)) / length(Simulation)
Fit <- c(1, 1, 1, 1, 1, 1)
names(Fit) <- 1:6
Simulation2 <- simDraws(1e4, w = Fit)
addHist(Y = 8, Dat = Simulation2, Color = rgb(0, 0, 0, 0.25))
Fit <- c(0.1, 1, 1, 1, 1, 1)
names(Fit) <- 1:6
Simulation3 <- simDraws(1e4, w = Fit)
addHist(Y = 8, Dat = Simulation3, Color = rgb(0, 0, 0, 0.25))
Fit <- c(0.5, 0.6, 0.7, 1, 1, 1)
names(Fit) <- 1:6
Simulation4 <- simDraws(1e4, w = Fit)
addHist(Y = 8, Dat = Simulation4, Color = rgb(0, 0, 0, 0.25))
Fit <- c(0.1, 0.2, 0.3, 0.4, 0.5, 1)
names(Fit) <- 1:6
Simulation5 <- simDraws(1e4, w = Fit)
addHist(Y = 8, Dat = Simulation5, Color = rgb(0, 0, 0, 0.25))
Fit <- c(0.1, 0.1, 0.1, 0.1, 0.1, 1)
names(Fit) <- 1:6
Simulation6 <- simDraws(1e4, w = Fit)
addHist(Y = 8, Dat = Simulation6, Color = rgb(0, 0, 0, 0.25))
mtext(side = 2, at = 8, line = 0, "sel. sim.")
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis = 1)
hist(Chisqs, main = "", xlab = "chi-squared values", ylab = "frequency")
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis = 1)
plot(1, 1, xlim = c(0, 400), ylim = c(1, 8.5), xlab = "", ylab = "", type = "n", yaxt = "n")
axis(2, at = 1:length(backgrounds), labels = backgrounds)
mtext(side = 1, expression(chi^2), cex = 1.75, line = 2.5)
counter <- 1
for (i in backgrounds) {
Data <- Chisqs[which(results[,3] == i)]
addHist(Y = counter, Dat = Data, Color = backgroundCol[counter])
counter <- counter + 1
}
abline(v = 11.70, lty = 2, lwd = 2, col = 'black')
Simulation <- simDraws(10000)
addHist(Y = 7, Dat = Simulation, Color = "lightgray")
mtext(side = 2, at = 7, line = 0, "simulated")
length(which(Simulation > 11.70)) / length(Simulation)
Fit <- c(1, 1, 1, 1, 1, 1)
names(Fit) <- 1:6
Simulation2 <- simDraws(1e4, w = Fit)
addHist(Y = 8, Dat = Simulation2, Color = rgb(0, 0, 0, 0.25))
Fit <- c(0.1, 1, 1, 1, 1, 1)
names(Fit) <- 1:6
Simulation3 <- simDraws(1e4, w = Fit)
addHist(Y = 8, Dat = Simulation3, Color = rgb(0, 0, 0, 0.25))
Fit <- c(0.5, 0.6, 0.7, 1, 1, 1)
names(Fit) <- 1:6
Simulation4 <- simDraws(1e4, w = Fit)
addHist(Y = 8, Dat = Simulation4, Color = rgb(0, 0, 0, 0.25))
Fit <- c(0.1, 0.2, 0.3, 0.4, 0.5, 1)
names(Fit) <- 1:6
Simulation5 <- simDraws(1e4, w = Fit)
addHist(Y = 8, Dat = Simulation5, Color = rgb(0, 0, 0, 0.25))
Fit <- c(0.1, 0.1, 0.1, 0.1, 0.1, 1)
names(Fit) <- 1:6
Simulation6 <- simDraws(1e4, w = Fit)
addHist(Y = 8, Dat = Simulation6, Color = rgb(0, 0, 0, 0.25))
mtext(side = 2, at = 8, line = 0, "sel. sim.")
Simulation7 <- c(Simulation2, Simulation3, Simulation4, Simulation5, Simulation6)
addHist(Y = 8, Dat = Simulation7, Color = rgb(0, 0, 1, 0.25))
head(counts)
head(results)
simDraws
simPop
?for
?for()
}
?for (variable in vector) {
}
}
simDraws()
simDraws
head(Simulation)
